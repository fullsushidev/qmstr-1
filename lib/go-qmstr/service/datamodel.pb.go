// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: datamodel.proto

package service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventClass int32

const (
	EventClass_ALL    EventClass = 0
	EventClass_PHASE  EventClass = 1
	EventClass_MODULE EventClass = 2
)

// Enum value maps for EventClass.
var (
	EventClass_name = map[int32]string{
		0: "ALL",
		1: "PHASE",
		2: "MODULE",
	}
	EventClass_value = map[string]int32{
		"ALL":    0,
		"PHASE":  1,
		"MODULE": 2,
	}
)

func (x EventClass) Enum() *EventClass {
	p := new(EventClass)
	*p = x
	return p
}

func (x EventClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventClass) Descriptor() protoreflect.EnumDescriptor {
	return file_datamodel_proto_enumTypes[0].Descriptor()
}

func (EventClass) Type() protoreflect.EnumType {
	return &file_datamodel_proto_enumTypes[0]
}

func (x EventClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventClass.Descriptor instead.
func (EventClass) EnumDescriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{0}
}

type Phase int32

const (
	Phase_INIT     Phase = 0
	Phase_BUILD    Phase = 1
	Phase_ANALYSIS Phase = 2
	Phase_REPORT   Phase = 3
	Phase_FAIL     Phase = 4
)

// Enum value maps for Phase.
var (
	Phase_name = map[int32]string{
		0: "INIT",
		1: "BUILD",
		2: "ANALYSIS",
		3: "REPORT",
		4: "FAIL",
	}
	Phase_value = map[string]int32{
		"INIT":     0,
		"BUILD":    1,
		"ANALYSIS": 2,
		"REPORT":   3,
		"FAIL":     4,
	}
)

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}

func (x Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_datamodel_proto_enumTypes[1].Descriptor()
}

func (Phase) Type() protoreflect.EnumType {
	return &file_datamodel_proto_enumTypes[1]
}

func (x Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phase.Descriptor instead.
func (Phase) EnumDescriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{1}
}

type ExceptionType int32

const (
	ExceptionType_ERROR   ExceptionType = 0
	ExceptionType_WARNING ExceptionType = 1
)

// Enum value maps for ExceptionType.
var (
	ExceptionType_name = map[int32]string{
		0: "ERROR",
		1: "WARNING",
	}
	ExceptionType_value = map[string]int32{
		"ERROR":   0,
		"WARNING": 1,
	}
)

func (x ExceptionType) Enum() *ExceptionType {
	p := new(ExceptionType)
	*p = x
	return p
}

func (x ExceptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExceptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_datamodel_proto_enumTypes[2].Descriptor()
}

func (ExceptionType) Type() protoreflect.EnumType {
	return &file_datamodel_proto_enumTypes[2]
}

func (x ExceptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExceptionType.Descriptor instead.
func (ExceptionType) EnumDescriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{2}
}

type DiagnosticNode_Severity int32

const (
	DiagnosticNode_UNDEF   DiagnosticNode_Severity = 0
	DiagnosticNode_INFO    DiagnosticNode_Severity = 1
	DiagnosticNode_WARNING DiagnosticNode_Severity = 2
	DiagnosticNode_ERROR   DiagnosticNode_Severity = 3
)

// Enum value maps for DiagnosticNode_Severity.
var (
	DiagnosticNode_Severity_name = map[int32]string{
		0: "UNDEF",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
	}
	DiagnosticNode_Severity_value = map[string]int32{
		"UNDEF":   0,
		"INFO":    1,
		"WARNING": 2,
		"ERROR":   3,
	}
)

func (x DiagnosticNode_Severity) Enum() *DiagnosticNode_Severity {
	p := new(DiagnosticNode_Severity)
	*p = x
	return p
}

func (x DiagnosticNode_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiagnosticNode_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_datamodel_proto_enumTypes[3].Descriptor()
}

func (DiagnosticNode_Severity) Type() protoreflect.EnumType {
	return &file_datamodel_proto_enumTypes[3]
}

func (x DiagnosticNode_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiagnosticNode_Severity.Descriptor instead.
func (DiagnosticNode_Severity) EnumDescriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{2, 0}
}

type FileNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FileNodeType string                 `protobuf:"bytes,2,opt,name=fileNodeType,proto3" json:"fileNodeType,omitempty"`
	Path         string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Name         string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	FileData     *FileNode_FileDataNode `protobuf:"bytes,6,opt,name=fileData,proto3" json:"fileData,omitempty"`
	Timestamp    string                 `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DerivedFrom  []*FileNode            `protobuf:"bytes,8,rep,name=derivedFrom,proto3" json:"derivedFrom,omitempty"`
	Dependencies []*FileNode            `protobuf:"bytes,9,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
}

func (x *FileNode) Reset() {
	*x = FileNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNode) ProtoMessage() {}

func (x *FileNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNode.ProtoReflect.Descriptor instead.
func (*FileNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{0}
}

func (x *FileNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FileNode) GetFileNodeType() string {
	if x != nil {
		return x.FileNodeType
	}
	return ""
}

func (x *FileNode) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileNode) GetFileData() *FileNode_FileDataNode {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *FileNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *FileNode) GetDerivedFrom() []*FileNode {
	if x != nil {
		return x.DerivedFrom
	}
	return nil
}

func (x *FileNode) GetDependencies() []*FileNode {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type InfoNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	InfoNodeType    string               `protobuf:"bytes,2,opt,name=infoNodeType,proto3" json:"infoNodeType,omitempty"`
	Type            string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ConfidenceScore float64              `protobuf:"fixed64,4,opt,name=confidenceScore,proto3" json:"confidenceScore,omitempty"`
	Analyzer        []*Analyzer          `protobuf:"bytes,5,rep,name=analyzer,proto3" json:"analyzer,omitempty"`
	DataNodes       []*InfoNode_DataNode `protobuf:"bytes,6,rep,name=dataNodes,proto3" json:"dataNodes,omitempty"`
	Timestamp       string               `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *InfoNode) Reset() {
	*x = InfoNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoNode) ProtoMessage() {}

func (x *InfoNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoNode.ProtoReflect.Descriptor instead.
func (*InfoNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{1}
}

func (x *InfoNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *InfoNode) GetInfoNodeType() string {
	if x != nil {
		return x.InfoNodeType
	}
	return ""
}

func (x *InfoNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InfoNode) GetConfidenceScore() float64 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *InfoNode) GetAnalyzer() []*Analyzer {
	if x != nil {
		return x.Analyzer
	}
	return nil
}

func (x *InfoNode) GetDataNodes() []*InfoNode_DataNode {
	if x != nil {
		return x.DataNodes
	}
	return nil
}

func (x *InfoNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type DiagnosticNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                string                  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DiagnosticNodeType string                  `protobuf:"bytes,2,opt,name=diagnosticNodeType,proto3" json:"diagnosticNodeType,omitempty"`
	Severity           DiagnosticNode_Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=service.DiagnosticNode_Severity" json:"severity,omitempty"`
	Message            string                  `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Analyzer           []*Analyzer             `protobuf:"bytes,5,rep,name=analyzer,proto3" json:"analyzer,omitempty"`
	Timestamp          string                  `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DiagnosticNode) Reset() {
	*x = DiagnosticNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnosticNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosticNode) ProtoMessage() {}

func (x *DiagnosticNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosticNode.ProtoReflect.Descriptor instead.
func (*DiagnosticNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{2}
}

func (x *DiagnosticNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DiagnosticNode) GetDiagnosticNodeType() string {
	if x != nil {
		return x.DiagnosticNodeType
	}
	return ""
}

func (x *DiagnosticNode) GetSeverity() DiagnosticNode_Severity {
	if x != nil {
		return x.Severity
	}
	return DiagnosticNode_UNDEF
}

func (x *DiagnosticNode) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DiagnosticNode) GetAnalyzer() []*Analyzer {
	if x != nil {
		return x.Analyzer
	}
	return nil
}

func (x *DiagnosticNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Analyzer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string              `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name             string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AnalyzerNodeType string              `protobuf:"bytes,3,opt,name=analyzerNodeType,proto3" json:"analyzerNodeType,omitempty"`
	TrustLevel       int64               `protobuf:"varint,4,opt,name=trustLevel,proto3" json:"trustLevel,omitempty"`
	PathSub          []*PathSubstitution `protobuf:"bytes,5,rep,name=pathSub,proto3" json:"pathSub,omitempty"`
}

func (x *Analyzer) Reset() {
	*x = Analyzer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Analyzer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Analyzer) ProtoMessage() {}

func (x *Analyzer) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Analyzer.ProtoReflect.Descriptor instead.
func (*Analyzer) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{3}
}

func (x *Analyzer) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Analyzer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Analyzer) GetAnalyzerNodeType() string {
	if x != nil {
		return x.AnalyzerNodeType
	}
	return ""
}

func (x *Analyzer) GetTrustLevel() int64 {
	if x != nil {
		return x.TrustLevel
	}
	return 0
}

func (x *Analyzer) GetPathSub() []*PathSubstitution {
	if x != nil {
		return x.PathSub
	}
	return nil
}

type PathSubstitution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old string `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New string `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *PathSubstitution) Reset() {
	*x = PathSubstitution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathSubstitution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSubstitution) ProtoMessage() {}

func (x *PathSubstitution) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSubstitution.ProtoReflect.Descriptor instead.
func (*PathSubstitution) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{4}
}

func (x *PathSubstitution) GetOld() string {
	if x != nil {
		return x.Old
	}
	return ""
}

func (x *PathSubstitution) GetNew() string {
	if x != nil {
		return x.New
	}
	return ""
}

type PackageNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version         string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	PackageNodeType string            `protobuf:"bytes,4,opt,name=packageNodeType,proto3" json:"packageNodeType,omitempty"`
	Targets         []*FileNode       `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	AdditionalInfo  []*InfoNode       `protobuf:"bytes,6,rep,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	BuildConfig     string            `protobuf:"bytes,7,opt,name=buildConfig,proto3" json:"buildConfig,omitempty"`
	DiagnosticInfo  []*DiagnosticNode `protobuf:"bytes,8,rep,name=diagnosticInfo,proto3" json:"diagnosticInfo,omitempty"`
	Timestamp       string            `protobuf:"bytes,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *PackageNode) Reset() {
	*x = PackageNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageNode) ProtoMessage() {}

func (x *PackageNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageNode.ProtoReflect.Descriptor instead.
func (*PackageNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{5}
}

func (x *PackageNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PackageNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PackageNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PackageNode) GetPackageNodeType() string {
	if x != nil {
		return x.PackageNodeType
	}
	return ""
}

func (x *PackageNode) GetTargets() []*FileNode {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *PackageNode) GetAdditionalInfo() []*InfoNode {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

func (x *PackageNode) GetBuildConfig() string {
	if x != nil {
		return x.BuildConfig
	}
	return ""
}

func (x *PackageNode) GetDiagnosticInfo() []*DiagnosticNode {
	if x != nil {
		return x.DiagnosticInfo
	}
	return nil
}

func (x *PackageNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type ProjectNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string         `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name            string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectNodeType string         `protobuf:"bytes,3,opt,name=projectNodeType,proto3" json:"projectNodeType,omitempty"`
	Packages        []*PackageNode `protobuf:"bytes,4,rep,name=packages,proto3" json:"packages,omitempty"`
	AdditionalInfo  []*InfoNode    `protobuf:"bytes,5,rep,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	Timestamp       string         `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ProjectNode) Reset() {
	*x = ProjectNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectNode) ProtoMessage() {}

func (x *ProjectNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectNode.ProtoReflect.Descriptor instead.
func (*ProjectNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ProjectNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectNode) GetProjectNodeType() string {
	if x != nil {
		return x.ProjectNodeType
	}
	return ""
}

func (x *ProjectNode) GetPackages() []*PackageNode {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *ProjectNode) GetAdditionalInfo() []*InfoNode {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

func (x *ProjectNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class   EventClass `protobuf:"varint,1,opt,name=class,proto3,enum=service.EventClass" json:"class,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetClass() EventClass {
	if x != nil {
		return x.Class
	}
	return EventClass_ALL
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type QmstrStateNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	QmstrStateNodeType string `protobuf:"bytes,2,opt,name=qmstrStateNodeType,proto3" json:"qmstrStateNodeType,omitempty"`
	Phase              Phase  `protobuf:"varint,3,opt,name=phase,proto3,enum=service.Phase" json:"phase,omitempty"`
	Done               bool   `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	Timestamp          string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *QmstrStateNode) Reset() {
	*x = QmstrStateNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QmstrStateNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QmstrStateNode) ProtoMessage() {}

func (x *QmstrStateNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QmstrStateNode.ProtoReflect.Descriptor instead.
func (*QmstrStateNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{8}
}

func (x *QmstrStateNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *QmstrStateNode) GetQmstrStateNodeType() string {
	if x != nil {
		return x.QmstrStateNodeType
	}
	return ""
}

func (x *QmstrStateNode) GetPhase() Phase {
	if x != nil {
		return x.Phase
	}
	return Phase_INIT
}

func (x *QmstrStateNode) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *QmstrStateNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type FileNode_FileDataNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	FileDataNodeType string            `protobuf:"bytes,2,opt,name=fileDataNodeType,proto3" json:"fileDataNodeType,omitempty"`
	Hash             string            `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	AdditionalInfo   []*InfoNode       `protobuf:"bytes,4,rep,name=additionalInfo,proto3" json:"additionalInfo,omitempty"`
	DiagnosticInfo   []*DiagnosticNode `protobuf:"bytes,5,rep,name=diagnosticInfo,proto3" json:"diagnosticInfo,omitempty"`
}

func (x *FileNode_FileDataNode) Reset() {
	*x = FileNode_FileDataNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNode_FileDataNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNode_FileDataNode) ProtoMessage() {}

func (x *FileNode_FileDataNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNode_FileDataNode.ProtoReflect.Descriptor instead.
func (*FileNode_FileDataNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FileNode_FileDataNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FileNode_FileDataNode) GetFileDataNodeType() string {
	if x != nil {
		return x.FileDataNodeType
	}
	return ""
}

func (x *FileNode_FileDataNode) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileNode_FileDataNode) GetAdditionalInfo() []*InfoNode {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

func (x *FileNode_FileDataNode) GetDiagnosticInfo() []*DiagnosticNode {
	if x != nil {
		return x.DiagnosticInfo
	}
	return nil
}

type InfoNode_DataNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DataNodeType string `protobuf:"bytes,2,opt,name=dataNodeType,proto3" json:"dataNodeType,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Data         string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp    string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *InfoNode_DataNode) Reset() {
	*x = InfoNode_DataNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datamodel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoNode_DataNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoNode_DataNode) ProtoMessage() {}

func (x *InfoNode_DataNode) ProtoReflect() protoreflect.Message {
	mi := &file_datamodel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoNode_DataNode.ProtoReflect.Descriptor instead.
func (*InfoNode_DataNode) Descriptor() ([]byte, []int) {
	return file_datamodel_proto_rawDescGZIP(), []int{1, 0}
}

func (x *InfoNode_DataNode) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *InfoNode_DataNode) GetDataNodeType() string {
	if x != nil {
		return x.DataNodeType
	}
	return ""
}

func (x *InfoNode_DataNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InfoNode_DataNode) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *InfoNode_DataNode) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_datamodel_proto protoreflect.FileDescriptor

var file_datamodel_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x8d, 0x04, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x33, 0x0a, 0x0b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0xdc, 0x01, 0x0a, 0x0c,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x39,
	0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0e, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8e, 0x03, 0x0a, 0x08, 0x49,
	0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x66,
	0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72,
	0x52, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x1a, 0x86, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xb0, 0x02, 0x0a, 0x0e,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x52, 0x08, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x37, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0xb1,
	0x01, 0x0a, 0x08, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a,
	0x07, 0x70, 0x61, 0x74, 0x68, 0x53, 0x75, 0x62, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x62,
	0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x74, 0x68, 0x53,
	0x75, 0x62, 0x22, 0x36, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x68, 0x53, 0x75, 0x62, 0x73, 0x74, 0x69,
	0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x22, 0xe0, 0x02, 0x0a, 0x0b, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f,
	0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xe8, 0x01,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4c, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x51, 0x6d, 0x73, 0x74, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x71,
	0x6d, 0x73, 0x74, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x71, 0x6d, 0x73, 0x74, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2a, 0x2c, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48,
	0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10,
	0x02, 0x2a, 0x40, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x49, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x53, 0x49, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x04, 0x2a, 0x27, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x42, 0x18, 0x0a, 0x16,
	0x6f, 0x72, 0x67, 0x2e, 0x71, 0x6d, 0x73, 0x74, 0x72, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datamodel_proto_rawDescOnce sync.Once
	file_datamodel_proto_rawDescData = file_datamodel_proto_rawDesc
)

func file_datamodel_proto_rawDescGZIP() []byte {
	file_datamodel_proto_rawDescOnce.Do(func() {
		file_datamodel_proto_rawDescData = protoimpl.X.CompressGZIP(file_datamodel_proto_rawDescData)
	})
	return file_datamodel_proto_rawDescData
}

var file_datamodel_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_datamodel_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_datamodel_proto_goTypes = []interface{}{
	(EventClass)(0),               // 0: service.EventClass
	(Phase)(0),                    // 1: service.Phase
	(ExceptionType)(0),            // 2: service.ExceptionType
	(DiagnosticNode_Severity)(0),  // 3: service.DiagnosticNode.Severity
	(*FileNode)(nil),              // 4: service.FileNode
	(*InfoNode)(nil),              // 5: service.InfoNode
	(*DiagnosticNode)(nil),        // 6: service.DiagnosticNode
	(*Analyzer)(nil),              // 7: service.Analyzer
	(*PathSubstitution)(nil),      // 8: service.PathSubstitution
	(*PackageNode)(nil),           // 9: service.PackageNode
	(*ProjectNode)(nil),           // 10: service.ProjectNode
	(*Event)(nil),                 // 11: service.Event
	(*QmstrStateNode)(nil),        // 12: service.QmstrStateNode
	(*FileNode_FileDataNode)(nil), // 13: service.FileNode.FileDataNode
	(*InfoNode_DataNode)(nil),     // 14: service.InfoNode.DataNode
}
var file_datamodel_proto_depIdxs = []int32{
	13, // 0: service.FileNode.fileData:type_name -> service.FileNode.FileDataNode
	4,  // 1: service.FileNode.derivedFrom:type_name -> service.FileNode
	4,  // 2: service.FileNode.dependencies:type_name -> service.FileNode
	7,  // 3: service.InfoNode.analyzer:type_name -> service.Analyzer
	14, // 4: service.InfoNode.dataNodes:type_name -> service.InfoNode.DataNode
	3,  // 5: service.DiagnosticNode.severity:type_name -> service.DiagnosticNode.Severity
	7,  // 6: service.DiagnosticNode.analyzer:type_name -> service.Analyzer
	8,  // 7: service.Analyzer.pathSub:type_name -> service.PathSubstitution
	4,  // 8: service.PackageNode.targets:type_name -> service.FileNode
	5,  // 9: service.PackageNode.additionalInfo:type_name -> service.InfoNode
	6,  // 10: service.PackageNode.diagnosticInfo:type_name -> service.DiagnosticNode
	9,  // 11: service.ProjectNode.packages:type_name -> service.PackageNode
	5,  // 12: service.ProjectNode.additionalInfo:type_name -> service.InfoNode
	0,  // 13: service.Event.class:type_name -> service.EventClass
	1,  // 14: service.QmstrStateNode.phase:type_name -> service.Phase
	5,  // 15: service.FileNode.FileDataNode.additionalInfo:type_name -> service.InfoNode
	6,  // 16: service.FileNode.FileDataNode.diagnosticInfo:type_name -> service.DiagnosticNode
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_datamodel_proto_init() }
func file_datamodel_proto_init() {
	if File_datamodel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datamodel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnosticNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Analyzer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathSubstitution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QmstrStateNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNode_FileDataNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datamodel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoNode_DataNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datamodel_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datamodel_proto_goTypes,
		DependencyIndexes: file_datamodel_proto_depIdxs,
		EnumInfos:         file_datamodel_proto_enumTypes,
		MessageInfos:      file_datamodel_proto_msgTypes,
	}.Build()
	File_datamodel_proto = out.File
	file_datamodel_proto_rawDesc = nil
	file_datamodel_proto_goTypes = nil
	file_datamodel_proto_depIdxs = nil
}
